//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行库版本:2.0.50727.1433
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Granity.granityMgr.CheckWork.Report {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSetCheckOnWorkList")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSetCheckOnWorkList : global::System.Data.DataSet {
        
        private 考勤明细查询DataTable table考勤明细查询;
        
        private EMPLOYDataTable tableEMPLOY;
        
        private global::System.Data.DataRelation relationEMPLOY_部门排班登记;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DataSetCheckOnWorkList() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DataSetCheckOnWorkList(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["考勤明细查询"] != null)) {
                    base.Tables.Add(new 考勤明细查询DataTable(ds.Tables["考勤明细查询"]));
                }
                if ((ds.Tables["EMPLOY"] != null)) {
                    base.Tables.Add(new EMPLOYDataTable(ds.Tables["EMPLOY"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 考勤明细查询DataTable 考勤明细查询 {
            get {
                return this.table考勤明细查询;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EMPLOYDataTable EMPLOY {
            get {
                return this.tableEMPLOY;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DataSetCheckOnWorkList cln = ((DataSetCheckOnWorkList)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["考勤明细查询"] != null)) {
                    base.Tables.Add(new 考勤明细查询DataTable(ds.Tables["考勤明细查询"]));
                }
                if ((ds.Tables["EMPLOY"] != null)) {
                    base.Tables.Add(new EMPLOYDataTable(ds.Tables["EMPLOY"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.table考勤明细查询 = ((考勤明细查询DataTable)(base.Tables["考勤明细查询"]));
            if ((initTable == true)) {
                if ((this.table考勤明细查询 != null)) {
                    this.table考勤明细查询.InitVars();
                }
            }
            this.tableEMPLOY = ((EMPLOYDataTable)(base.Tables["EMPLOY"]));
            if ((initTable == true)) {
                if ((this.tableEMPLOY != null)) {
                    this.tableEMPLOY.InitVars();
                }
            }
            this.relationEMPLOY_部门排班登记 = this.Relations["EMPLOY_部门排班登记"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DataSetCheckOnWorkList";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSetCheckOnWorkList.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.table考勤明细查询 = new 考勤明细查询DataTable();
            base.Tables.Add(this.table考勤明细查询);
            this.tableEMPLOY = new EMPLOYDataTable();
            base.Tables.Add(this.tableEMPLOY);
            this.relationEMPLOY_部门排班登记 = new global::System.Data.DataRelation("EMPLOY_部门排班登记", new global::System.Data.DataColumn[] {
                        this.tableEMPLOY.EMPCODEColumn}, new global::System.Data.DataColumn[] {
                        this.table考勤明细查询.员工编号Column}, false);
            this.Relations.Add(this.relationEMPLOY_部门排班登记);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize考勤明细查询() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeEMPLOY() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSetCheckOnWorkList ds = new DataSetCheckOnWorkList();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void 考勤明细查询RowChangeEventHandler(object sender, 考勤明细查询RowChangeEvent e);
        
        public delegate void EMPLOYRowChangeEventHandler(object sender, EMPLOYRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 考勤明细查询DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn column部门;
            
            private global::System.Data.DataColumn column班制;
            
            private global::System.Data.DataColumn column启动日期;
            
            private global::System.Data.DataColumn column班次;
            
            private global::System.Data.DataColumn column周期序号;
            
            private global::System.Data.DataColumn column日期;
            
            private global::System.Data.DataColumn column状态;
            
            private global::System.Data.DataColumn column上班1;
            
            private global::System.Data.DataColumn column下班1;
            
            private global::System.Data.DataColumn column上班2;
            
            private global::System.Data.DataColumn column下班2;
            
            private global::System.Data.DataColumn column打卡类别;
            
            private global::System.Data.DataColumn column允许迟到;
            
            private global::System.Data.DataColumn column迟到限制;
            
            private global::System.Data.DataColumn column允许早退;
            
            private global::System.Data.DataColumn column早退限制;
            
            private global::System.Data.DataColumn column上班有效;
            
            private global::System.Data.DataColumn column下班有效;
            
            private global::System.Data.DataColumn column部门名称;
            
            private global::System.Data.DataColumn column班制名称;
            
            private global::System.Data.DataColumn column员工编号;
            
            private global::System.Data.DataColumn column上班情况;
            
            private global::System.Data.DataColumn column下班情况;
            
            private global::System.Data.DataColumn column员工名称;
            
            private global::System.Data.DataColumn column打卡时间1;
            
            private global::System.Data.DataColumn column打卡时间4;
            
            private global::System.Data.DataColumn column打卡时间3;
            
            private global::System.Data.DataColumn column打卡时间2;
            
            private global::System.Data.DataColumn column早退时间;
            
            private global::System.Data.DataColumn column迟到时间;
            
            private global::System.Data.DataColumn column登记类别;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 考勤明细查询DataTable() {
                this.TableName = "考勤明细查询";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 考勤明细查询DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 考勤明细查询DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 部门Column {
                get {
                    return this.column部门;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 班制Column {
                get {
                    return this.column班制;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 启动日期Column {
                get {
                    return this.column启动日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 班次Column {
                get {
                    return this.column班次;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 周期序号Column {
                get {
                    return this.column周期序号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 日期Column {
                get {
                    return this.column日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 状态Column {
                get {
                    return this.column状态;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 上班1Column {
                get {
                    return this.column上班1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 下班1Column {
                get {
                    return this.column下班1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 上班2Column {
                get {
                    return this.column上班2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 下班2Column {
                get {
                    return this.column下班2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 打卡类别Column {
                get {
                    return this.column打卡类别;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 允许迟到Column {
                get {
                    return this.column允许迟到;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 迟到限制Column {
                get {
                    return this.column迟到限制;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 允许早退Column {
                get {
                    return this.column允许早退;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 早退限制Column {
                get {
                    return this.column早退限制;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 上班有效Column {
                get {
                    return this.column上班有效;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 下班有效Column {
                get {
                    return this.column下班有效;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 部门名称Column {
                get {
                    return this.column部门名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 班制名称Column {
                get {
                    return this.column班制名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 员工编号Column {
                get {
                    return this.column员工编号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 上班情况Column {
                get {
                    return this.column上班情况;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 下班情况Column {
                get {
                    return this.column下班情况;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 员工名称Column {
                get {
                    return this.column员工名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 打卡时间1Column {
                get {
                    return this.column打卡时间1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 打卡时间4Column {
                get {
                    return this.column打卡时间4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 打卡时间3Column {
                get {
                    return this.column打卡时间3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 打卡时间2Column {
                get {
                    return this.column打卡时间2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 早退时间Column {
                get {
                    return this.column早退时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 迟到时间Column {
                get {
                    return this.column迟到时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 登记类别Column {
                get {
                    return this.column登记类别;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 考勤明细查询Row this[int index] {
                get {
                    return ((考勤明细查询Row)(this.Rows[index]));
                }
            }
            
            public event 考勤明细查询RowChangeEventHandler 考勤明细查询RowChanging;
            
            public event 考勤明细查询RowChangeEventHandler 考勤明细查询RowChanged;
            
            public event 考勤明细查询RowChangeEventHandler 考勤明细查询RowDeleting;
            
            public event 考勤明细查询RowChangeEventHandler 考勤明细查询RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add考勤明细查询Row(考勤明细查询Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 考勤明细查询Row Add考勤明细查询Row(
                        System.Guid ID, 
                        System.Guid 部门, 
                        System.Guid 班制, 
                        System.DateTime 启动日期, 
                        int 班次, 
                        int 周期序号, 
                        System.DateTime 日期, 
                        string 状态, 
                        System.DateTime 上班1, 
                        System.DateTime 下班1, 
                        System.DateTime 上班2, 
                        System.DateTime 下班2, 
                        string 打卡类别, 
                        int 允许迟到, 
                        int 迟到限制, 
                        int 允许早退, 
                        int 早退限制, 
                        int 上班有效, 
                        int 下班有效, 
                        string 部门名称, 
                        string 班制名称, 
                        EMPLOYRow parentEMPLOYRowByEMPLOY_部门排班登记, 
                        string 上班情况, 
                        string 下班情况, 
                        string 员工名称, 
                        System.DateTime 打卡时间1, 
                        System.DateTime 打卡时间4, 
                        System.DateTime 打卡时间3, 
                        System.DateTime 打卡时间2, 
                        int 早退时间, 
                        int 迟到时间, 
                        string 登记类别) {
                考勤明细查询Row row考勤明细查询Row = ((考勤明细查询Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        部门,
                        班制,
                        启动日期,
                        班次,
                        周期序号,
                        日期,
                        状态,
                        上班1,
                        下班1,
                        上班2,
                        下班2,
                        打卡类别,
                        允许迟到,
                        迟到限制,
                        允许早退,
                        早退限制,
                        上班有效,
                        下班有效,
                        部门名称,
                        班制名称,
                        null,
                        上班情况,
                        下班情况,
                        员工名称,
                        打卡时间1,
                        打卡时间4,
                        打卡时间3,
                        打卡时间2,
                        早退时间,
                        迟到时间,
                        登记类别};
                if ((parentEMPLOYRowByEMPLOY_部门排班登记 != null)) {
                    columnValuesArray[21] = parentEMPLOYRowByEMPLOY_部门排班登记[2];
                }
                row考勤明细查询Row.ItemArray = columnValuesArray;
                this.Rows.Add(row考勤明细查询Row);
                return row考勤明细查询Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 考勤明细查询Row FindByID(System.Guid ID) {
                return ((考勤明细查询Row)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                考勤明细查询DataTable cln = ((考勤明细查询DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 考勤明细查询DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.column部门 = base.Columns["部门"];
                this.column班制 = base.Columns["班制"];
                this.column启动日期 = base.Columns["启动日期"];
                this.column班次 = base.Columns["班次"];
                this.column周期序号 = base.Columns["周期序号"];
                this.column日期 = base.Columns["日期"];
                this.column状态 = base.Columns["状态"];
                this.column上班1 = base.Columns["上班1"];
                this.column下班1 = base.Columns["下班1"];
                this.column上班2 = base.Columns["上班2"];
                this.column下班2 = base.Columns["下班2"];
                this.column打卡类别 = base.Columns["打卡类别"];
                this.column允许迟到 = base.Columns["允许迟到"];
                this.column迟到限制 = base.Columns["迟到限制"];
                this.column允许早退 = base.Columns["允许早退"];
                this.column早退限制 = base.Columns["早退限制"];
                this.column上班有效 = base.Columns["上班有效"];
                this.column下班有效 = base.Columns["下班有效"];
                this.column部门名称 = base.Columns["部门名称"];
                this.column班制名称 = base.Columns["班制名称"];
                this.column员工编号 = base.Columns["员工编号"];
                this.column上班情况 = base.Columns["上班情况"];
                this.column下班情况 = base.Columns["下班情况"];
                this.column员工名称 = base.Columns["员工名称"];
                this.column打卡时间1 = base.Columns["打卡时间1"];
                this.column打卡时间4 = base.Columns["打卡时间4"];
                this.column打卡时间3 = base.Columns["打卡时间3"];
                this.column打卡时间2 = base.Columns["打卡时间2"];
                this.column早退时间 = base.Columns["早退时间"];
                this.column迟到时间 = base.Columns["迟到时间"];
                this.column登记类别 = base.Columns["登记类别"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.column部门 = new global::System.Data.DataColumn("部门", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column部门);
                this.column班制 = new global::System.Data.DataColumn("班制", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column班制);
                this.column启动日期 = new global::System.Data.DataColumn("启动日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column启动日期);
                this.column班次 = new global::System.Data.DataColumn("班次", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column班次);
                this.column周期序号 = new global::System.Data.DataColumn("周期序号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column周期序号);
                this.column日期 = new global::System.Data.DataColumn("日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column日期);
                this.column状态 = new global::System.Data.DataColumn("状态", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column状态);
                this.column上班1 = new global::System.Data.DataColumn("上班1", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column上班1);
                this.column下班1 = new global::System.Data.DataColumn("下班1", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column下班1);
                this.column上班2 = new global::System.Data.DataColumn("上班2", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column上班2);
                this.column下班2 = new global::System.Data.DataColumn("下班2", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column下班2);
                this.column打卡类别 = new global::System.Data.DataColumn("打卡类别", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column打卡类别);
                this.column允许迟到 = new global::System.Data.DataColumn("允许迟到", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column允许迟到);
                this.column迟到限制 = new global::System.Data.DataColumn("迟到限制", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column迟到限制);
                this.column允许早退 = new global::System.Data.DataColumn("允许早退", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column允许早退);
                this.column早退限制 = new global::System.Data.DataColumn("早退限制", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column早退限制);
                this.column上班有效 = new global::System.Data.DataColumn("上班有效", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column上班有效);
                this.column下班有效 = new global::System.Data.DataColumn("下班有效", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column下班有效);
                this.column部门名称 = new global::System.Data.DataColumn("部门名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column部门名称);
                this.column班制名称 = new global::System.Data.DataColumn("班制名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column班制名称);
                this.column员工编号 = new global::System.Data.DataColumn("员工编号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column员工编号);
                this.column上班情况 = new global::System.Data.DataColumn("上班情况", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column上班情况);
                this.column下班情况 = new global::System.Data.DataColumn("下班情况", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column下班情况);
                this.column员工名称 = new global::System.Data.DataColumn("员工名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column员工名称);
                this.column打卡时间1 = new global::System.Data.DataColumn("打卡时间1", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column打卡时间1);
                this.column打卡时间4 = new global::System.Data.DataColumn("打卡时间4", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column打卡时间4);
                this.column打卡时间3 = new global::System.Data.DataColumn("打卡时间3", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column打卡时间3);
                this.column打卡时间2 = new global::System.Data.DataColumn("打卡时间2", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column打卡时间2);
                this.column早退时间 = new global::System.Data.DataColumn("早退时间", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column早退时间);
                this.column迟到时间 = new global::System.Data.DataColumn("迟到时间", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column迟到时间);
                this.column登记类别 = new global::System.Data.DataColumn("登记类别", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column登记类别);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.column状态.MaxLength = 50;
                this.column打卡类别.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 考勤明细查询Row New考勤明细查询Row() {
                return ((考勤明细查询Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 考勤明细查询Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(考勤明细查询Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.考勤明细查询RowChanged != null)) {
                    this.考勤明细查询RowChanged(this, new 考勤明细查询RowChangeEvent(((考勤明细查询Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.考勤明细查询RowChanging != null)) {
                    this.考勤明细查询RowChanging(this, new 考勤明细查询RowChangeEvent(((考勤明细查询Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.考勤明细查询RowDeleted != null)) {
                    this.考勤明细查询RowDeleted(this, new 考勤明细查询RowChangeEvent(((考勤明细查询Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.考勤明细查询RowDeleting != null)) {
                    this.考勤明细查询RowDeleting(this, new 考勤明细查询RowChangeEvent(((考勤明细查询Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove考勤明细查询Row(考勤明细查询Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetCheckOnWorkList ds = new DataSetCheckOnWorkList();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "考勤明细查询DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EMPLOYDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnEMPID;
            
            private global::System.Data.DataColumn columnEMPCODE;
            
            private global::System.Data.DataColumn columnNAME;
            
            private global::System.Data.DataColumn columnEMPTYPEID;
            
            private global::System.Data.DataColumn columncompany;
            
            private global::System.Data.DataColumn columnDEPARTMENT;
            
            private global::System.Data.DataColumn columnDEPTCODE;
            
            private global::System.Data.DataColumn columnDUTY;
            
            private global::System.Data.DataColumn columnPOSTCODE;
            
            private global::System.Data.DataColumn columnFOREFATHER;
            
            private global::System.Data.DataColumn columnPOSTDATE;
            
            private global::System.Data.DataColumn columnSIGN;
            
            private global::System.Data.DataColumn columnPAY;
            
            private global::System.Data.DataColumn columnCOUNTMETH;
            
            private global::System.Data.DataColumn columnMEMORY;
            
            private global::System.Data.DataColumn columnISOPERATE;
            
            private global::System.Data.DataColumn columnSEX;
            
            private global::System.Data.DataColumn columnBIRTHDAY;
            
            private global::System.Data.DataColumn columnIDCARD;
            
            private global::System.Data.DataColumn columnADDRESS;
            
            private global::System.Data.DataColumn columnEMAIL;
            
            private global::System.Data.DataColumn columnCULTURE;
            
            private global::System.Data.DataColumn columnBP;
            
            private global::System.Data.DataColumn columnTELEPHONE;
            
            private global::System.Data.DataColumn columnHOMEPHONE;
            
            private global::System.Data.DataColumn columnUPFLAG;
            
            private global::System.Data.DataColumn columnpic;
            
            private global::System.Data.DataColumn column核算方式;
            
            private global::System.Data.DataColumn column班制名称;
            
            private global::System.Data.DataColumn column部门名称;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EMPLOYDataTable() {
                this.TableName = "EMPLOY";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EMPLOYDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected EMPLOYDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMPIDColumn {
                get {
                    return this.columnEMPID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMPCODEColumn {
                get {
                    return this.columnEMPCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NAMEColumn {
                get {
                    return this.columnNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMPTYPEIDColumn {
                get {
                    return this.columnEMPTYPEID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn companyColumn {
                get {
                    return this.columncompany;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEPARTMENTColumn {
                get {
                    return this.columnDEPARTMENT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEPTCODEColumn {
                get {
                    return this.columnDEPTCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DUTYColumn {
                get {
                    return this.columnDUTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn POSTCODEColumn {
                get {
                    return this.columnPOSTCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FOREFATHERColumn {
                get {
                    return this.columnFOREFATHER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn POSTDATEColumn {
                get {
                    return this.columnPOSTDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SIGNColumn {
                get {
                    return this.columnSIGN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PAYColumn {
                get {
                    return this.columnPAY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COUNTMETHColumn {
                get {
                    return this.columnCOUNTMETH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MEMORYColumn {
                get {
                    return this.columnMEMORY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ISOPERATEColumn {
                get {
                    return this.columnISOPERATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SEXColumn {
                get {
                    return this.columnSEX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BIRTHDAYColumn {
                get {
                    return this.columnBIRTHDAY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDCARDColumn {
                get {
                    return this.columnIDCARD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ADDRESSColumn {
                get {
                    return this.columnADDRESS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMAILColumn {
                get {
                    return this.columnEMAIL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CULTUREColumn {
                get {
                    return this.columnCULTURE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BPColumn {
                get {
                    return this.columnBP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TELEPHONEColumn {
                get {
                    return this.columnTELEPHONE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HOMEPHONEColumn {
                get {
                    return this.columnHOMEPHONE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UPFLAGColumn {
                get {
                    return this.columnUPFLAG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn picColumn {
                get {
                    return this.columnpic;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 核算方式Column {
                get {
                    return this.column核算方式;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 班制名称Column {
                get {
                    return this.column班制名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 部门名称Column {
                get {
                    return this.column部门名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EMPLOYRow this[int index] {
                get {
                    return ((EMPLOYRow)(this.Rows[index]));
                }
            }
            
            public event EMPLOYRowChangeEventHandler EMPLOYRowChanging;
            
            public event EMPLOYRowChangeEventHandler EMPLOYRowChanged;
            
            public event EMPLOYRowChangeEventHandler EMPLOYRowDeleting;
            
            public event EMPLOYRowChangeEventHandler EMPLOYRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddEMPLOYRow(EMPLOYRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EMPLOYRow AddEMPLOYRow(
                        System.Guid ID, 
                        int EMPID, 
                        string EMPCODE, 
                        string NAME, 
                        string EMPTYPEID, 
                        string company, 
                        string DEPARTMENT, 
                        string DEPTCODE, 
                        string DUTY, 
                        string POSTCODE, 
                        string FOREFATHER, 
                        System.DateTime POSTDATE, 
                        string SIGN, 
                        double PAY, 
                        string COUNTMETH, 
                        string MEMORY, 
                        bool ISOPERATE, 
                        string SEX, 
                        System.DateTime BIRTHDAY, 
                        string IDCARD, 
                        string ADDRESS, 
                        string EMAIL, 
                        string CULTURE, 
                        string BP, 
                        string TELEPHONE, 
                        string HOMEPHONE, 
                        bool UPFLAG, 
                        string pic, 
                        string 核算方式, 
                        string 班制名称, 
                        string 部门名称) {
                EMPLOYRow rowEMPLOYRow = ((EMPLOYRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        EMPID,
                        EMPCODE,
                        NAME,
                        EMPTYPEID,
                        company,
                        DEPARTMENT,
                        DEPTCODE,
                        DUTY,
                        POSTCODE,
                        FOREFATHER,
                        POSTDATE,
                        SIGN,
                        PAY,
                        COUNTMETH,
                        MEMORY,
                        ISOPERATE,
                        SEX,
                        BIRTHDAY,
                        IDCARD,
                        ADDRESS,
                        EMAIL,
                        CULTURE,
                        BP,
                        TELEPHONE,
                        HOMEPHONE,
                        UPFLAG,
                        pic,
                        核算方式,
                        班制名称,
                        部门名称};
                rowEMPLOYRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEMPLOYRow);
                return rowEMPLOYRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                EMPLOYDataTable cln = ((EMPLOYDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new EMPLOYDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnEMPID = base.Columns["EMPID"];
                this.columnEMPCODE = base.Columns["EMPCODE"];
                this.columnNAME = base.Columns["NAME"];
                this.columnEMPTYPEID = base.Columns["EMPTYPEID"];
                this.columncompany = base.Columns["company"];
                this.columnDEPARTMENT = base.Columns["DEPARTMENT"];
                this.columnDEPTCODE = base.Columns["DEPTCODE"];
                this.columnDUTY = base.Columns["DUTY"];
                this.columnPOSTCODE = base.Columns["POSTCODE"];
                this.columnFOREFATHER = base.Columns["FOREFATHER"];
                this.columnPOSTDATE = base.Columns["POSTDATE"];
                this.columnSIGN = base.Columns["SIGN"];
                this.columnPAY = base.Columns["PAY"];
                this.columnCOUNTMETH = base.Columns["COUNTMETH"];
                this.columnMEMORY = base.Columns["MEMORY"];
                this.columnISOPERATE = base.Columns["ISOPERATE"];
                this.columnSEX = base.Columns["SEX"];
                this.columnBIRTHDAY = base.Columns["BIRTHDAY"];
                this.columnIDCARD = base.Columns["IDCARD"];
                this.columnADDRESS = base.Columns["ADDRESS"];
                this.columnEMAIL = base.Columns["EMAIL"];
                this.columnCULTURE = base.Columns["CULTURE"];
                this.columnBP = base.Columns["BP"];
                this.columnTELEPHONE = base.Columns["TELEPHONE"];
                this.columnHOMEPHONE = base.Columns["HOMEPHONE"];
                this.columnUPFLAG = base.Columns["UPFLAG"];
                this.columnpic = base.Columns["pic"];
                this.column核算方式 = base.Columns["核算方式"];
                this.column班制名称 = base.Columns["班制名称"];
                this.column部门名称 = base.Columns["部门名称"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnEMPID = new global::System.Data.DataColumn("EMPID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMPID);
                this.columnEMPCODE = new global::System.Data.DataColumn("EMPCODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMPCODE);
                this.columnNAME = new global::System.Data.DataColumn("NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME);
                this.columnEMPTYPEID = new global::System.Data.DataColumn("EMPTYPEID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMPTYPEID);
                this.columncompany = new global::System.Data.DataColumn("company", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncompany);
                this.columnDEPARTMENT = new global::System.Data.DataColumn("DEPARTMENT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEPARTMENT);
                this.columnDEPTCODE = new global::System.Data.DataColumn("DEPTCODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEPTCODE);
                this.columnDUTY = new global::System.Data.DataColumn("DUTY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDUTY);
                this.columnPOSTCODE = new global::System.Data.DataColumn("POSTCODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOSTCODE);
                this.columnFOREFATHER = new global::System.Data.DataColumn("FOREFATHER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFOREFATHER);
                this.columnPOSTDATE = new global::System.Data.DataColumn("POSTDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOSTDATE);
                this.columnSIGN = new global::System.Data.DataColumn("SIGN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSIGN);
                this.columnPAY = new global::System.Data.DataColumn("PAY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAY);
                this.columnCOUNTMETH = new global::System.Data.DataColumn("COUNTMETH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOUNTMETH);
                this.columnMEMORY = new global::System.Data.DataColumn("MEMORY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMEMORY);
                this.columnISOPERATE = new global::System.Data.DataColumn("ISOPERATE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnISOPERATE);
                this.columnSEX = new global::System.Data.DataColumn("SEX", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEX);
                this.columnBIRTHDAY = new global::System.Data.DataColumn("BIRTHDAY", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBIRTHDAY);
                this.columnIDCARD = new global::System.Data.DataColumn("IDCARD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIDCARD);
                this.columnADDRESS = new global::System.Data.DataColumn("ADDRESS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADDRESS);
                this.columnEMAIL = new global::System.Data.DataColumn("EMAIL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMAIL);
                this.columnCULTURE = new global::System.Data.DataColumn("CULTURE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCULTURE);
                this.columnBP = new global::System.Data.DataColumn("BP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBP);
                this.columnTELEPHONE = new global::System.Data.DataColumn("TELEPHONE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTELEPHONE);
                this.columnHOMEPHONE = new global::System.Data.DataColumn("HOMEPHONE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHOMEPHONE);
                this.columnUPFLAG = new global::System.Data.DataColumn("UPFLAG", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUPFLAG);
                this.columnpic = new global::System.Data.DataColumn("pic", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpic);
                this.column核算方式 = new global::System.Data.DataColumn("核算方式", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column核算方式);
                this.column班制名称 = new global::System.Data.DataColumn("班制名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column班制名称);
                this.column部门名称 = new global::System.Data.DataColumn("部门名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column部门名称);
                this.columnID.AllowDBNull = false;
                this.columnEMPCODE.AllowDBNull = false;
                this.columnEMPCODE.MaxLength = 20;
                this.columnNAME.AllowDBNull = false;
                this.columnNAME.MaxLength = 20;
                this.columnEMPTYPEID.MaxLength = 50;
                this.columncompany.MaxLength = 100;
                this.columnDEPARTMENT.MaxLength = 100;
                this.columnDEPTCODE.MaxLength = 50;
                this.columnDUTY.MaxLength = 50;
                this.columnPOSTCODE.MaxLength = 50;
                this.columnFOREFATHER.MaxLength = 50;
                this.columnSIGN.MaxLength = 50;
                this.columnCOUNTMETH.MaxLength = 50;
                this.columnMEMORY.MaxLength = 50;
                this.columnSEX.MaxLength = 50;
                this.columnIDCARD.MaxLength = 50;
                this.columnADDRESS.MaxLength = 50;
                this.columnEMAIL.MaxLength = 50;
                this.columnCULTURE.MaxLength = 50;
                this.columnBP.MaxLength = 50;
                this.columnTELEPHONE.MaxLength = 50;
                this.columnHOMEPHONE.MaxLength = 50;
                this.columnpic.MaxLength = 100;
                this.column核算方式.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EMPLOYRow NewEMPLOYRow() {
                return ((EMPLOYRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new EMPLOYRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(EMPLOYRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EMPLOYRowChanged != null)) {
                    this.EMPLOYRowChanged(this, new EMPLOYRowChangeEvent(((EMPLOYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EMPLOYRowChanging != null)) {
                    this.EMPLOYRowChanging(this, new EMPLOYRowChangeEvent(((EMPLOYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EMPLOYRowDeleted != null)) {
                    this.EMPLOYRowDeleted(this, new EMPLOYRowChangeEvent(((EMPLOYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EMPLOYRowDeleting != null)) {
                    this.EMPLOYRowDeleting(this, new EMPLOYRowChangeEvent(((EMPLOYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveEMPLOYRow(EMPLOYRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetCheckOnWorkList ds = new DataSetCheckOnWorkList();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EMPLOYDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 考勤明细查询Row : global::System.Data.DataRow {
            
            private 考勤明细查询DataTable table考勤明细查询;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 考勤明细查询Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table考勤明细查询 = ((考勤明细查询DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid ID {
                get {
                    return ((global::System.Guid)(this[this.table考勤明细查询.IDColumn]));
                }
                set {
                    this[this.table考勤明细查询.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid 部门 {
                get {
                    try {
                        return ((global::System.Guid)(this[this.table考勤明细查询.部门Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“考勤明细查询”中列“部门”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table考勤明细查询.部门Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid 班制 {
                get {
                    try {
                        return ((global::System.Guid)(this[this.table考勤明细查询.班制Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“考勤明细查询”中列“班制”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table考勤明细查询.班制Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 启动日期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table考勤明细查询.启动日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“考勤明细查询”中列“启动日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table考勤明细查询.启动日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 班次 {
                get {
                    try {
                        return ((int)(this[this.table考勤明细查询.班次Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“考勤明细查询”中列“班次”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table考勤明细查询.班次Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 周期序号 {
                get {
                    try {
                        return ((int)(this[this.table考勤明细查询.周期序号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“考勤明细查询”中列“周期序号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table考勤明细查询.周期序号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 日期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table考勤明细查询.日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“考勤明细查询”中列“日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table考勤明细查询.日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 状态 {
                get {
                    try {
                        return ((string)(this[this.table考勤明细查询.状态Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“考勤明细查询”中列“状态”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table考勤明细查询.状态Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 上班1 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table考勤明细查询.上班1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“考勤明细查询”中列“上班1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table考勤明细查询.上班1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 下班1 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table考勤明细查询.下班1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“考勤明细查询”中列“下班1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table考勤明细查询.下班1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 上班2 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table考勤明细查询.上班2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“考勤明细查询”中列“上班2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table考勤明细查询.上班2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 下班2 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table考勤明细查询.下班2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“考勤明细查询”中列“下班2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table考勤明细查询.下班2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 打卡类别 {
                get {
                    try {
                        return ((string)(this[this.table考勤明细查询.打卡类别Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“考勤明细查询”中列“打卡类别”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table考勤明细查询.打卡类别Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 允许迟到 {
                get {
                    try {
                        return ((int)(this[this.table考勤明细查询.允许迟到Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“考勤明细查询”中列“允许迟到”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table考勤明细查询.允许迟到Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 迟到限制 {
                get {
                    try {
                        return ((int)(this[this.table考勤明细查询.迟到限制Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“考勤明细查询”中列“迟到限制”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table考勤明细查询.迟到限制Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 允许早退 {
                get {
                    try {
                        return ((int)(this[this.table考勤明细查询.允许早退Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“考勤明细查询”中列“允许早退”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table考勤明细查询.允许早退Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 早退限制 {
                get {
                    try {
                        return ((int)(this[this.table考勤明细查询.早退限制Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“考勤明细查询”中列“早退限制”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table考勤明细查询.早退限制Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 上班有效 {
                get {
                    try {
                        return ((int)(this[this.table考勤明细查询.上班有效Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“考勤明细查询”中列“上班有效”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table考勤明细查询.上班有效Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 下班有效 {
                get {
                    try {
                        return ((int)(this[this.table考勤明细查询.下班有效Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“考勤明细查询”中列“下班有效”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table考勤明细查询.下班有效Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 部门名称 {
                get {
                    try {
                        return ((string)(this[this.table考勤明细查询.部门名称Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“考勤明细查询”中列“部门名称”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table考勤明细查询.部门名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 班制名称 {
                get {
                    try {
                        return ((string)(this[this.table考勤明细查询.班制名称Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“考勤明细查询”中列“班制名称”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table考勤明细查询.班制名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 员工编号 {
                get {
                    try {
                        return ((string)(this[this.table考勤明细查询.员工编号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“考勤明细查询”中列“员工编号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table考勤明细查询.员工编号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 上班情况 {
                get {
                    try {
                        return ((string)(this[this.table考勤明细查询.上班情况Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“考勤明细查询”中列“上班情况”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table考勤明细查询.上班情况Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 下班情况 {
                get {
                    try {
                        return ((string)(this[this.table考勤明细查询.下班情况Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“考勤明细查询”中列“下班情况”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table考勤明细查询.下班情况Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 员工名称 {
                get {
                    try {
                        return ((string)(this[this.table考勤明细查询.员工名称Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“考勤明细查询”中列“员工名称”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table考勤明细查询.员工名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 打卡时间1 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table考勤明细查询.打卡时间1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“考勤明细查询”中列“打卡时间1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table考勤明细查询.打卡时间1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 打卡时间4 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table考勤明细查询.打卡时间4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“考勤明细查询”中列“打卡时间4”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table考勤明细查询.打卡时间4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 打卡时间3 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table考勤明细查询.打卡时间3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“考勤明细查询”中列“打卡时间3”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table考勤明细查询.打卡时间3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 打卡时间2 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table考勤明细查询.打卡时间2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“考勤明细查询”中列“打卡时间2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table考勤明细查询.打卡时间2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 早退时间 {
                get {
                    try {
                        return ((int)(this[this.table考勤明细查询.早退时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“考勤明细查询”中列“早退时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table考勤明细查询.早退时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 迟到时间 {
                get {
                    try {
                        return ((int)(this[this.table考勤明细查询.迟到时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“考勤明细查询”中列“迟到时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table考勤明细查询.迟到时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 登记类别 {
                get {
                    try {
                        return ((string)(this[this.table考勤明细查询.登记类别Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“考勤明细查询”中列“登记类别”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table考勤明细查询.登记类别Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EMPLOYRow EMPLOYRow {
                get {
                    return ((EMPLOYRow)(this.GetParentRow(this.Table.ParentRelations["EMPLOY_部门排班登记"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["EMPLOY_部门排班登记"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is部门Null() {
                return this.IsNull(this.table考勤明细查询.部门Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set部门Null() {
                this[this.table考勤明细查询.部门Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is班制Null() {
                return this.IsNull(this.table考勤明细查询.班制Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set班制Null() {
                this[this.table考勤明细查询.班制Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is启动日期Null() {
                return this.IsNull(this.table考勤明细查询.启动日期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set启动日期Null() {
                this[this.table考勤明细查询.启动日期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is班次Null() {
                return this.IsNull(this.table考勤明细查询.班次Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set班次Null() {
                this[this.table考勤明细查询.班次Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is周期序号Null() {
                return this.IsNull(this.table考勤明细查询.周期序号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set周期序号Null() {
                this[this.table考勤明细查询.周期序号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is日期Null() {
                return this.IsNull(this.table考勤明细查询.日期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set日期Null() {
                this[this.table考勤明细查询.日期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is状态Null() {
                return this.IsNull(this.table考勤明细查询.状态Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set状态Null() {
                this[this.table考勤明细查询.状态Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is上班1Null() {
                return this.IsNull(this.table考勤明细查询.上班1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set上班1Null() {
                this[this.table考勤明细查询.上班1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is下班1Null() {
                return this.IsNull(this.table考勤明细查询.下班1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set下班1Null() {
                this[this.table考勤明细查询.下班1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is上班2Null() {
                return this.IsNull(this.table考勤明细查询.上班2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set上班2Null() {
                this[this.table考勤明细查询.上班2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is下班2Null() {
                return this.IsNull(this.table考勤明细查询.下班2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set下班2Null() {
                this[this.table考勤明细查询.下班2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is打卡类别Null() {
                return this.IsNull(this.table考勤明细查询.打卡类别Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set打卡类别Null() {
                this[this.table考勤明细查询.打卡类别Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is允许迟到Null() {
                return this.IsNull(this.table考勤明细查询.允许迟到Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set允许迟到Null() {
                this[this.table考勤明细查询.允许迟到Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is迟到限制Null() {
                return this.IsNull(this.table考勤明细查询.迟到限制Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set迟到限制Null() {
                this[this.table考勤明细查询.迟到限制Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is允许早退Null() {
                return this.IsNull(this.table考勤明细查询.允许早退Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set允许早退Null() {
                this[this.table考勤明细查询.允许早退Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is早退限制Null() {
                return this.IsNull(this.table考勤明细查询.早退限制Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set早退限制Null() {
                this[this.table考勤明细查询.早退限制Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is上班有效Null() {
                return this.IsNull(this.table考勤明细查询.上班有效Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set上班有效Null() {
                this[this.table考勤明细查询.上班有效Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is下班有效Null() {
                return this.IsNull(this.table考勤明细查询.下班有效Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set下班有效Null() {
                this[this.table考勤明细查询.下班有效Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is部门名称Null() {
                return this.IsNull(this.table考勤明细查询.部门名称Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set部门名称Null() {
                this[this.table考勤明细查询.部门名称Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is班制名称Null() {
                return this.IsNull(this.table考勤明细查询.班制名称Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set班制名称Null() {
                this[this.table考勤明细查询.班制名称Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is员工编号Null() {
                return this.IsNull(this.table考勤明细查询.员工编号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set员工编号Null() {
                this[this.table考勤明细查询.员工编号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is上班情况Null() {
                return this.IsNull(this.table考勤明细查询.上班情况Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set上班情况Null() {
                this[this.table考勤明细查询.上班情况Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is下班情况Null() {
                return this.IsNull(this.table考勤明细查询.下班情况Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set下班情况Null() {
                this[this.table考勤明细查询.下班情况Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is员工名称Null() {
                return this.IsNull(this.table考勤明细查询.员工名称Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set员工名称Null() {
                this[this.table考勤明细查询.员工名称Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is打卡时间1Null() {
                return this.IsNull(this.table考勤明细查询.打卡时间1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set打卡时间1Null() {
                this[this.table考勤明细查询.打卡时间1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is打卡时间4Null() {
                return this.IsNull(this.table考勤明细查询.打卡时间4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set打卡时间4Null() {
                this[this.table考勤明细查询.打卡时间4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is打卡时间3Null() {
                return this.IsNull(this.table考勤明细查询.打卡时间3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set打卡时间3Null() {
                this[this.table考勤明细查询.打卡时间3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is打卡时间2Null() {
                return this.IsNull(this.table考勤明细查询.打卡时间2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set打卡时间2Null() {
                this[this.table考勤明细查询.打卡时间2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is早退时间Null() {
                return this.IsNull(this.table考勤明细查询.早退时间Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set早退时间Null() {
                this[this.table考勤明细查询.早退时间Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is迟到时间Null() {
                return this.IsNull(this.table考勤明细查询.迟到时间Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set迟到时间Null() {
                this[this.table考勤明细查询.迟到时间Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is登记类别Null() {
                return this.IsNull(this.table考勤明细查询.登记类别Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set登记类别Null() {
                this[this.table考勤明细查询.登记类别Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class EMPLOYRow : global::System.Data.DataRow {
            
            private EMPLOYDataTable tableEMPLOY;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EMPLOYRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEMPLOY = ((EMPLOYDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid ID {
                get {
                    return ((global::System.Guid)(this[this.tableEMPLOY.IDColumn]));
                }
                set {
                    this[this.tableEMPLOY.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EMPID {
                get {
                    try {
                        return ((int)(this[this.tableEMPLOY.EMPIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“EMPLOY”中列“EMPID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEMPLOY.EMPIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMPCODE {
                get {
                    return ((string)(this[this.tableEMPLOY.EMPCODEColumn]));
                }
                set {
                    this[this.tableEMPLOY.EMPCODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NAME {
                get {
                    return ((string)(this[this.tableEMPLOY.NAMEColumn]));
                }
                set {
                    this[this.tableEMPLOY.NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMPTYPEID {
                get {
                    try {
                        return ((string)(this[this.tableEMPLOY.EMPTYPEIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“EMPLOY”中列“EMPTYPEID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEMPLOY.EMPTYPEIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string company {
                get {
                    try {
                        return ((string)(this[this.tableEMPLOY.companyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“EMPLOY”中列“company”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEMPLOY.companyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEPARTMENT {
                get {
                    try {
                        return ((string)(this[this.tableEMPLOY.DEPARTMENTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“EMPLOY”中列“DEPARTMENT”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEMPLOY.DEPARTMENTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEPTCODE {
                get {
                    try {
                        return ((string)(this[this.tableEMPLOY.DEPTCODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“EMPLOY”中列“DEPTCODE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEMPLOY.DEPTCODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DUTY {
                get {
                    try {
                        return ((string)(this[this.tableEMPLOY.DUTYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“EMPLOY”中列“DUTY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEMPLOY.DUTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string POSTCODE {
                get {
                    try {
                        return ((string)(this[this.tableEMPLOY.POSTCODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“EMPLOY”中列“POSTCODE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEMPLOY.POSTCODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FOREFATHER {
                get {
                    try {
                        return ((string)(this[this.tableEMPLOY.FOREFATHERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“EMPLOY”中列“FOREFATHER”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEMPLOY.FOREFATHERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime POSTDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableEMPLOY.POSTDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“EMPLOY”中列“POSTDATE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEMPLOY.POSTDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SIGN {
                get {
                    try {
                        return ((string)(this[this.tableEMPLOY.SIGNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“EMPLOY”中列“SIGN”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEMPLOY.SIGNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PAY {
                get {
                    try {
                        return ((double)(this[this.tableEMPLOY.PAYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“EMPLOY”中列“PAY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEMPLOY.PAYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COUNTMETH {
                get {
                    try {
                        return ((string)(this[this.tableEMPLOY.COUNTMETHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“EMPLOY”中列“COUNTMETH”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEMPLOY.COUNTMETHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MEMORY {
                get {
                    try {
                        return ((string)(this[this.tableEMPLOY.MEMORYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“EMPLOY”中列“MEMORY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEMPLOY.MEMORYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ISOPERATE {
                get {
                    try {
                        return ((bool)(this[this.tableEMPLOY.ISOPERATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“EMPLOY”中列“ISOPERATE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEMPLOY.ISOPERATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SEX {
                get {
                    try {
                        return ((string)(this[this.tableEMPLOY.SEXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“EMPLOY”中列“SEX”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEMPLOY.SEXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime BIRTHDAY {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableEMPLOY.BIRTHDAYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“EMPLOY”中列“BIRTHDAY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEMPLOY.BIRTHDAYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IDCARD {
                get {
                    try {
                        return ((string)(this[this.tableEMPLOY.IDCARDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“EMPLOY”中列“IDCARD”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEMPLOY.IDCARDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ADDRESS {
                get {
                    try {
                        return ((string)(this[this.tableEMPLOY.ADDRESSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“EMPLOY”中列“ADDRESS”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEMPLOY.ADDRESSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMAIL {
                get {
                    try {
                        return ((string)(this[this.tableEMPLOY.EMAILColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“EMPLOY”中列“EMAIL”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEMPLOY.EMAILColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CULTURE {
                get {
                    try {
                        return ((string)(this[this.tableEMPLOY.CULTUREColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“EMPLOY”中列“CULTURE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEMPLOY.CULTUREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BP {
                get {
                    try {
                        return ((string)(this[this.tableEMPLOY.BPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“EMPLOY”中列“BP”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEMPLOY.BPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TELEPHONE {
                get {
                    try {
                        return ((string)(this[this.tableEMPLOY.TELEPHONEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“EMPLOY”中列“TELEPHONE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEMPLOY.TELEPHONEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HOMEPHONE {
                get {
                    try {
                        return ((string)(this[this.tableEMPLOY.HOMEPHONEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“EMPLOY”中列“HOMEPHONE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEMPLOY.HOMEPHONEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool UPFLAG {
                get {
                    try {
                        return ((bool)(this[this.tableEMPLOY.UPFLAGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“EMPLOY”中列“UPFLAG”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEMPLOY.UPFLAGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string pic {
                get {
                    try {
                        return ((string)(this[this.tableEMPLOY.picColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“EMPLOY”中列“pic”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEMPLOY.picColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 核算方式 {
                get {
                    try {
                        return ((string)(this[this.tableEMPLOY.核算方式Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“EMPLOY”中列“核算方式”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEMPLOY.核算方式Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 班制名称 {
                get {
                    try {
                        return ((string)(this[this.tableEMPLOY.班制名称Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“EMPLOY”中列“班制名称”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEMPLOY.班制名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 部门名称 {
                get {
                    try {
                        return ((string)(this[this.tableEMPLOY.部门名称Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“EMPLOY”中列“部门名称”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEMPLOY.部门名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMPIDNull() {
                return this.IsNull(this.tableEMPLOY.EMPIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMPIDNull() {
                this[this.tableEMPLOY.EMPIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMPTYPEIDNull() {
                return this.IsNull(this.tableEMPLOY.EMPTYPEIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMPTYPEIDNull() {
                this[this.tableEMPLOY.EMPTYPEIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscompanyNull() {
                return this.IsNull(this.tableEMPLOY.companyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcompanyNull() {
                this[this.tableEMPLOY.companyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEPARTMENTNull() {
                return this.IsNull(this.tableEMPLOY.DEPARTMENTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEPARTMENTNull() {
                this[this.tableEMPLOY.DEPARTMENTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEPTCODENull() {
                return this.IsNull(this.tableEMPLOY.DEPTCODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEPTCODENull() {
                this[this.tableEMPLOY.DEPTCODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDUTYNull() {
                return this.IsNull(this.tableEMPLOY.DUTYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDUTYNull() {
                this[this.tableEMPLOY.DUTYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPOSTCODENull() {
                return this.IsNull(this.tableEMPLOY.POSTCODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPOSTCODENull() {
                this[this.tableEMPLOY.POSTCODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFOREFATHERNull() {
                return this.IsNull(this.tableEMPLOY.FOREFATHERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFOREFATHERNull() {
                this[this.tableEMPLOY.FOREFATHERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPOSTDATENull() {
                return this.IsNull(this.tableEMPLOY.POSTDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPOSTDATENull() {
                this[this.tableEMPLOY.POSTDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSIGNNull() {
                return this.IsNull(this.tableEMPLOY.SIGNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSIGNNull() {
                this[this.tableEMPLOY.SIGNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPAYNull() {
                return this.IsNull(this.tableEMPLOY.PAYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPAYNull() {
                this[this.tableEMPLOY.PAYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOUNTMETHNull() {
                return this.IsNull(this.tableEMPLOY.COUNTMETHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOUNTMETHNull() {
                this[this.tableEMPLOY.COUNTMETHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMEMORYNull() {
                return this.IsNull(this.tableEMPLOY.MEMORYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMEMORYNull() {
                this[this.tableEMPLOY.MEMORYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsISOPERATENull() {
                return this.IsNull(this.tableEMPLOY.ISOPERATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetISOPERATENull() {
                this[this.tableEMPLOY.ISOPERATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSEXNull() {
                return this.IsNull(this.tableEMPLOY.SEXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSEXNull() {
                this[this.tableEMPLOY.SEXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBIRTHDAYNull() {
                return this.IsNull(this.tableEMPLOY.BIRTHDAYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBIRTHDAYNull() {
                this[this.tableEMPLOY.BIRTHDAYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDCARDNull() {
                return this.IsNull(this.tableEMPLOY.IDCARDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDCARDNull() {
                this[this.tableEMPLOY.IDCARDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsADDRESSNull() {
                return this.IsNull(this.tableEMPLOY.ADDRESSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetADDRESSNull() {
                this[this.tableEMPLOY.ADDRESSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMAILNull() {
                return this.IsNull(this.tableEMPLOY.EMAILColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMAILNull() {
                this[this.tableEMPLOY.EMAILColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCULTURENull() {
                return this.IsNull(this.tableEMPLOY.CULTUREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCULTURENull() {
                this[this.tableEMPLOY.CULTUREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBPNull() {
                return this.IsNull(this.tableEMPLOY.BPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBPNull() {
                this[this.tableEMPLOY.BPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTELEPHONENull() {
                return this.IsNull(this.tableEMPLOY.TELEPHONEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTELEPHONENull() {
                this[this.tableEMPLOY.TELEPHONEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHOMEPHONENull() {
                return this.IsNull(this.tableEMPLOY.HOMEPHONEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHOMEPHONENull() {
                this[this.tableEMPLOY.HOMEPHONEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUPFLAGNull() {
                return this.IsNull(this.tableEMPLOY.UPFLAGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUPFLAGNull() {
                this[this.tableEMPLOY.UPFLAGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspicNull() {
                return this.IsNull(this.tableEMPLOY.picColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpicNull() {
                this[this.tableEMPLOY.picColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is核算方式Null() {
                return this.IsNull(this.tableEMPLOY.核算方式Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set核算方式Null() {
                this[this.tableEMPLOY.核算方式Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is班制名称Null() {
                return this.IsNull(this.tableEMPLOY.班制名称Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set班制名称Null() {
                this[this.tableEMPLOY.班制名称Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is部门名称Null() {
                return this.IsNull(this.tableEMPLOY.部门名称Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set部门名称Null() {
                this[this.tableEMPLOY.部门名称Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 考勤明细查询Row[] Get部门排班登记Rows() {
                if ((this.Table.ChildRelations["EMPLOY_部门排班登记"] == null)) {
                    return new 考勤明细查询Row[0];
                }
                else {
                    return ((考勤明细查询Row[])(base.GetChildRows(this.Table.ChildRelations["EMPLOY_部门排班登记"])));
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 考勤明细查询RowChangeEvent : global::System.EventArgs {
            
            private 考勤明细查询Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 考勤明细查询RowChangeEvent(考勤明细查询Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 考勤明细查询Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class EMPLOYRowChangeEvent : global::System.EventArgs {
            
            private EMPLOYRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EMPLOYRowChangeEvent(EMPLOYRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EMPLOYRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Granity.granityMgr.CheckWork.Report.DataSetCheckOnWorkListTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class 考勤明细查询TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public 考勤明细查询TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "考勤明细查询";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("部门", "部门");
            tableMapping.ColumnMappings.Add("班制", "班制");
            tableMapping.ColumnMappings.Add("启动日期", "启动日期");
            tableMapping.ColumnMappings.Add("班次", "班次");
            tableMapping.ColumnMappings.Add("周期序号", "周期序号");
            tableMapping.ColumnMappings.Add("日期", "日期");
            tableMapping.ColumnMappings.Add("状态", "状态");
            tableMapping.ColumnMappings.Add("上班1", "上班1");
            tableMapping.ColumnMappings.Add("下班1", "下班1");
            tableMapping.ColumnMappings.Add("上班2", "上班2");
            tableMapping.ColumnMappings.Add("下班2", "下班2");
            tableMapping.ColumnMappings.Add("打卡类别", "打卡类别");
            tableMapping.ColumnMappings.Add("允许迟到", "允许迟到");
            tableMapping.ColumnMappings.Add("迟到限制", "迟到限制");
            tableMapping.ColumnMappings.Add("允许早退", "允许早退");
            tableMapping.ColumnMappings.Add("早退限制", "早退限制");
            tableMapping.ColumnMappings.Add("上班有效", "上班有效");
            tableMapping.ColumnMappings.Add("下班有效", "下班有效");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [work].[部门排班登记] WHERE (([ID] = @Original_ID) AND ((@IsNull_部门 = 1 AND [部门] IS NULL) OR ([部门] = @Original_部门)) AND ((@IsNull_班制 = 1 AND [班制] IS NULL) OR ([班制] = @Original_班制)) AND ((@IsNull_启动日期 = 1 AND [启动日期] IS NULL) OR ([启动日期] = @Original_启动日期)) AND ((@IsNull_班次 = 1 AND [班次] IS NULL) OR ([班次] = @Original_班次)) AND ((@IsNull_周期序号 = 1 AND [周期序号] IS NULL) OR ([周期序号] = @Original_周期序号)) AND ((@IsNull_日期 = 1 AND [日期] IS NULL) OR ([日期] = @Original_日期)) AND ((@IsNull_状态 = 1 AND [状态] IS NULL) OR ([状态] = @Original_状态)) AND ((@IsNull_上班1 = 1 AND [上班1] IS NULL) OR ([上班1] = @Original_上班1)) AND ((@IsNull_下班1 = 1 AND [下班1] IS NULL) OR ([下班1] = @Original_下班1)) AND ((@IsNull_上班2 = 1 AND [上班2] IS NULL) OR ([上班2] = @Original_上班2)) AND ((@IsNull_下班2 = 1 AND [下班2] IS NULL) OR ([下班2] = @Original_下班2)) AND ((@IsNull_打卡类别 = 1 AND [打卡类别] IS NULL) OR ([打卡类别] = @Original_打卡类别)) AND ((@IsNull_允许迟到 = 1 AND [允许迟到] IS NULL) OR ([允许迟到] = @Original_允许迟到)) AND ((@IsNull_迟到限制 = 1 AND [迟到限制] IS NULL) OR ([迟到限制] = @Original_迟到限制)) AND ((@IsNull_允许早退 = 1 AND [允许早退] IS NULL) OR ([允许早退] = @Original_允许早退)) AND ((@IsNull_早退限制 = 1 AND [早退限制] IS NULL) OR ([早退限制] = @Original_早退限制)) AND ((@IsNull_上班有效 = 1 AND [上班有效] IS NULL) OR ([上班有效] = @Original_上班有效)) AND ((@IsNull_下班有效 = 1 AND [下班有效] IS NULL) OR ([下班有效] = @Original_下班有效)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_部门", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "部门", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_部门", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "部门", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_班制", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "班制", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_班制", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "班制", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_启动日期", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "启动日期", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_启动日期", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "启动日期", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_班次", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "班次", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_班次", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "班次", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_周期序号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "周期序号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_周期序号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "周期序号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_日期", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "日期", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_日期", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "日期", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_状态", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "状态", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_状态", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "状态", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_上班1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "上班1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_上班1", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "上班1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_下班1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "下班1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_下班1", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "下班1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_上班2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "上班2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_上班2", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "上班2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_下班2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "下班2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_下班2", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "下班2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_打卡类别", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "打卡类别", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_打卡类别", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "打卡类别", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_允许迟到", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "允许迟到", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_允许迟到", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "允许迟到", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_迟到限制", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "迟到限制", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_迟到限制", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "迟到限制", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_允许早退", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "允许早退", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_允许早退", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "允许早退", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_早退限制", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "早退限制", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_早退限制", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "早退限制", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_上班有效", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "上班有效", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_上班有效", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "上班有效", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_下班有效", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "下班有效", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_下班有效", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "下班有效", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [work].[部门排班登记] ([ID], [部门], [班制], [启动日期], [班次], [周期序号], [日期], [状态], [上班1], [下班1], [上班2], [下班2], [打卡类别], [允许迟到], [迟到限制], [允许早退], [早退限制], [上班有效], [下班有效]) VALUES (@ID, @部门, @班制, @启动日期, @班次, @周期序号, @日期, @状态, @上班1, @下班1, @上班2, @下班2, @打卡类别, @允许迟到, @迟到限制, @允许早退, @早退限制, @上班有效, @下班有效);
SELECT ID, 部门, 班制, 启动日期, 班次, 周期序号, 日期, 状态, 上班1, 下班1, 上班2, 下班2, 打卡类别, 允许迟到, 迟到限制, 允许早退, 早退限制, 上班有效, 下班有效 FROM [work].部门排班登记 WHERE (ID = @ID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@部门", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "部门", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@班制", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "班制", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@启动日期", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "启动日期", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@班次", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "班次", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@周期序号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "周期序号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@日期", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "日期", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@状态", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "状态", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@上班1", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "上班1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@下班1", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "下班1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@上班2", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "上班2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@下班2", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "下班2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@打卡类别", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "打卡类别", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@允许迟到", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "允许迟到", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@迟到限制", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "迟到限制", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@允许早退", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "允许早退", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@早退限制", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "早退限制", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@上班有效", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "上班有效", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@下班有效", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "下班有效", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [work].[部门排班登记] SET [ID] = @ID, [部门] = @部门, [班制] = @班制, [启动日期] = @启动日期, [班" +
                "次] = @班次, [周期序号] = @周期序号, [日期] = @日期, [状态] = @状态, [上班1] = @上班1, [下班1] = @下班1, [上" +
                "班2] = @上班2, [下班2] = @下班2, [打卡类别] = @打卡类别, [允许迟到] = @允许迟到, [迟到限制] = @迟到限制, [允许早退]" +
                " = @允许早退, [早退限制] = @早退限制, [上班有效] = @上班有效, [下班有效] = @下班有效 WHERE (([ID] = @Origina" +
                "l_ID) AND ((@IsNull_部门 = 1 AND [部门] IS NULL) OR ([部门] = @Original_部门)) AND ((@Is" +
                "Null_班制 = 1 AND [班制] IS NULL) OR ([班制] = @Original_班制)) AND ((@IsNull_启动日期 = 1 A" +
                "ND [启动日期] IS NULL) OR ([启动日期] = @Original_启动日期)) AND ((@IsNull_班次 = 1 AND [班次] I" +
                "S NULL) OR ([班次] = @Original_班次)) AND ((@IsNull_周期序号 = 1 AND [周期序号] IS NULL) OR " +
                "([周期序号] = @Original_周期序号)) AND ((@IsNull_日期 = 1 AND [日期] IS NULL) OR ([日期] = @Or" +
                "iginal_日期)) AND ((@IsNull_状态 = 1 AND [状态] IS NULL) OR ([状态] = @Original_状态)) AND" +
                " ((@IsNull_上班1 = 1 AND [上班1] IS NULL) OR ([上班1] = @Original_上班1)) AND ((@IsNull_" +
                "下班1 = 1 AND [下班1] IS NULL) OR ([下班1] = @Original_下班1)) AND ((@IsNull_上班2 = 1 AND" +
                " [上班2] IS NULL) OR ([上班2] = @Original_上班2)) AND ((@IsNull_下班2 = 1 AND [下班2] IS N" +
                "ULL) OR ([下班2] = @Original_下班2)) AND ((@IsNull_打卡类别 = 1 AND [打卡类别] IS NULL) OR (" +
                "[打卡类别] = @Original_打卡类别)) AND ((@IsNull_允许迟到 = 1 AND [允许迟到] IS NULL) OR ([允许迟到] " +
                "= @Original_允许迟到)) AND ((@IsNull_迟到限制 = 1 AND [迟到限制] IS NULL) OR ([迟到限制] = @Orig" +
                "inal_迟到限制)) AND ((@IsNull_允许早退 = 1 AND [允许早退] IS NULL) OR ([允许早退] = @Original_允许" +
                "早退)) AND ((@IsNull_早退限制 = 1 AND [早退限制] IS NULL) OR ([早退限制] = @Original_早退限制)) AN" +
                "D ((@IsNull_上班有效 = 1 AND [上班有效] IS NULL) OR ([上班有效] = @Original_上班有效)) AND ((@Is" +
                "Null_下班有效 = 1 AND [下班有效] IS NULL) OR ([下班有效] = @Original_下班有效)));\r\nSELECT ID, 部门" +
                ", 班制, 启动日期, 班次, 周期序号, 日期, 状态, 上班1, 下班1, 上班2, 下班2, 打卡类别, 允许迟到, 迟到限制, 允许早退, 早退限制, " +
                "上班有效, 下班有效 FROM [work].部门排班登记 WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@部门", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "部门", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@班制", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "班制", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@启动日期", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "启动日期", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@班次", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "班次", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@周期序号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "周期序号", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@日期", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "日期", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@状态", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "状态", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@上班1", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "上班1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@下班1", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "下班1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@上班2", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "上班2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@下班2", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "下班2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@打卡类别", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "打卡类别", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@允许迟到", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "允许迟到", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@迟到限制", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "迟到限制", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@允许早退", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "允许早退", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@早退限制", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "早退限制", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@上班有效", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "上班有效", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@下班有效", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "下班有效", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_部门", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "部门", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_部门", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "部门", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_班制", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "班制", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_班制", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "班制", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_启动日期", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "启动日期", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_启动日期", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "启动日期", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_班次", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "班次", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_班次", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "班次", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_周期序号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "周期序号", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_周期序号", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "周期序号", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_日期", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "日期", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_日期", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "日期", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_状态", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "状态", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_状态", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "状态", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_上班1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "上班1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_上班1", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "上班1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_下班1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "下班1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_下班1", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "下班1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_上班2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "上班2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_上班2", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "上班2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_下班2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "下班2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_下班2", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "下班2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_打卡类别", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "打卡类别", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_打卡类别", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "打卡类别", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_允许迟到", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "允许迟到", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_允许迟到", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "允许迟到", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_迟到限制", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "迟到限制", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_迟到限制", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "迟到限制", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_允许早退", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "允许早退", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_允许早退", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "允许早退", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_早退限制", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "早退限制", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_早退限制", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "早退限制", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_上班有效", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "上班有效", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_上班有效", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "上班有效", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_下班有效", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "下班有效", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_下班有效", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "下班有效", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Granity.granityMgr.Properties.Settings.Default.SmartCardConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, 部门, 班制, 启动日期, 班次, 周期序号, 日期, 状态, 上班1, 下班1, 上班2, 下班2, 打卡类别, 允许迟到, 迟到限制, " +
                "允许早退, 早退限制, 上班有效, 下班有效 FROM [work].部门排班登记";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetCheckOnWorkList.考勤明细查询DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetCheckOnWorkList.考勤明细查询DataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSetCheckOnWorkList.考勤明细查询DataTable dataTable = new DataSetCheckOnWorkList.考勤明细查询DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSetCheckOnWorkList.考勤明细查询DataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSetCheckOnWorkList dataSet) {
            return this.Adapter.Update(dataSet, "考勤明细查询");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    System.Guid Original_ID, 
                    global::System.Nullable<global::System.Guid> Original_部门, 
                    global::System.Nullable<global::System.Guid> Original_班制, 
                    global::System.Nullable<global::System.DateTime> Original_启动日期, 
                    global::System.Nullable<int> Original_班次, 
                    global::System.Nullable<int> Original_周期序号, 
                    global::System.Nullable<global::System.DateTime> Original_日期, 
                    string Original_状态, 
                    global::System.Nullable<global::System.DateTime> Original_上班1, 
                    global::System.Nullable<global::System.DateTime> Original_下班1, 
                    global::System.Nullable<global::System.DateTime> Original_上班2, 
                    global::System.Nullable<global::System.DateTime> Original_下班2, 
                    string Original_打卡类别, 
                    global::System.Nullable<int> Original_允许迟到, 
                    global::System.Nullable<int> Original_迟到限制, 
                    global::System.Nullable<int> Original_允许早退, 
                    global::System.Nullable<int> Original_早退限制, 
                    global::System.Nullable<int> Original_上班有效, 
                    global::System.Nullable<int> Original_下班有效) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((System.Guid)(Original_ID));
            if ((Original_部门.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((System.Guid)(Original_部门.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_班制.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((System.Guid)(Original_班制.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_启动日期.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_启动日期.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_班次.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_班次.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_周期序号.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(Original_周期序号.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_日期.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((System.DateTime)(Original_日期.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_状态 == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_状态));
            }
            if ((Original_上班1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((System.DateTime)(Original_上班1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_下班1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((System.DateTime)(Original_下班1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_上班2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((System.DateTime)(Original_上班2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_下班2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((System.DateTime)(Original_下班2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_打卡类别 == null)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_打卡类别));
            }
            if ((Original_允许迟到.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((int)(Original_允许迟到.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_迟到限制.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((int)(Original_迟到限制.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_允许早退.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((int)(Original_允许早退.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_早退限制.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((int)(Original_早退限制.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_上班有效.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((int)(Original_上班有效.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_下班有效.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((int)(Original_下班有效.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    System.Guid ID, 
                    global::System.Nullable<global::System.Guid> 部门, 
                    global::System.Nullable<global::System.Guid> 班制, 
                    global::System.Nullable<global::System.DateTime> 启动日期, 
                    global::System.Nullable<int> 班次, 
                    global::System.Nullable<int> 周期序号, 
                    global::System.Nullable<global::System.DateTime> 日期, 
                    string 状态, 
                    global::System.Nullable<global::System.DateTime> 上班1, 
                    global::System.Nullable<global::System.DateTime> 下班1, 
                    global::System.Nullable<global::System.DateTime> 上班2, 
                    global::System.Nullable<global::System.DateTime> 下班2, 
                    string 打卡类别, 
                    global::System.Nullable<int> 允许迟到, 
                    global::System.Nullable<int> 迟到限制, 
                    global::System.Nullable<int> 允许早退, 
                    global::System.Nullable<int> 早退限制, 
                    global::System.Nullable<int> 上班有效, 
                    global::System.Nullable<int> 下班有效) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.Guid)(ID));
            if ((部门.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((System.Guid)(部门.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((班制.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.Guid)(班制.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((启动日期.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(启动日期.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((班次.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((int)(班次.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((周期序号.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((int)(周期序号.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((日期.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(日期.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((状态 == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(状态));
            }
            if ((上班1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((System.DateTime)(上班1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((下班1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((System.DateTime)(下班1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((上班2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((System.DateTime)(上班2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((下班2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((System.DateTime)(下班2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((打卡类别 == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(打卡类别));
            }
            if ((允许迟到.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((int)(允许迟到.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((迟到限制.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((int)(迟到限制.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((允许早退.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((int)(允许早退.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((早退限制.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((int)(早退限制.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((上班有效.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((int)(上班有效.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((下班有效.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((int)(下班有效.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.Guid ID, 
                    global::System.Nullable<global::System.Guid> 部门, 
                    global::System.Nullable<global::System.Guid> 班制, 
                    global::System.Nullable<global::System.DateTime> 启动日期, 
                    global::System.Nullable<int> 班次, 
                    global::System.Nullable<int> 周期序号, 
                    global::System.Nullable<global::System.DateTime> 日期, 
                    string 状态, 
                    global::System.Nullable<global::System.DateTime> 上班1, 
                    global::System.Nullable<global::System.DateTime> 下班1, 
                    global::System.Nullable<global::System.DateTime> 上班2, 
                    global::System.Nullable<global::System.DateTime> 下班2, 
                    string 打卡类别, 
                    global::System.Nullable<int> 允许迟到, 
                    global::System.Nullable<int> 迟到限制, 
                    global::System.Nullable<int> 允许早退, 
                    global::System.Nullable<int> 早退限制, 
                    global::System.Nullable<int> 上班有效, 
                    global::System.Nullable<int> 下班有效, 
                    System.Guid Original_ID, 
                    global::System.Nullable<global::System.Guid> Original_部门, 
                    global::System.Nullable<global::System.Guid> Original_班制, 
                    global::System.Nullable<global::System.DateTime> Original_启动日期, 
                    global::System.Nullable<int> Original_班次, 
                    global::System.Nullable<int> Original_周期序号, 
                    global::System.Nullable<global::System.DateTime> Original_日期, 
                    string Original_状态, 
                    global::System.Nullable<global::System.DateTime> Original_上班1, 
                    global::System.Nullable<global::System.DateTime> Original_下班1, 
                    global::System.Nullable<global::System.DateTime> Original_上班2, 
                    global::System.Nullable<global::System.DateTime> Original_下班2, 
                    string Original_打卡类别, 
                    global::System.Nullable<int> Original_允许迟到, 
                    global::System.Nullable<int> Original_迟到限制, 
                    global::System.Nullable<int> Original_允许早退, 
                    global::System.Nullable<int> Original_早退限制, 
                    global::System.Nullable<int> Original_上班有效, 
                    global::System.Nullable<int> Original_下班有效) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((System.Guid)(ID));
            if ((部门.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((System.Guid)(部门.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((班制.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.Guid)(班制.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((启动日期.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(启动日期.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((班次.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(班次.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((周期序号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(周期序号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((日期.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(日期.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((状态 == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(状态));
            }
            if ((上班1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(上班1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((下班1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(下班1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((上班2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(上班2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((下班2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(下班2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((打卡类别 == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(打卡类别));
            }
            if ((允许迟到.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(允许迟到.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((迟到限制.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(迟到限制.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((允许早退.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(允许早退.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((早退限制.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(早退限制.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((上班有效.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(上班有效.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((下班有效.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(下班有效.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[19].Value = ((System.Guid)(Original_ID));
            if ((Original_部门.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((System.Guid)(Original_部门.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_班制.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((System.Guid)(Original_班制.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_启动日期.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((System.DateTime)(Original_启动日期.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_班次.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((int)(Original_班次.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_周期序号.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((int)(Original_周期序号.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Original_日期.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((System.DateTime)(Original_日期.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((Original_状态 == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_状态));
            }
            if ((Original_上班1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((System.DateTime)(Original_上班1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((Original_下班1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((System.DateTime)(Original_下班1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((Original_上班2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[39].Value = ((System.DateTime)(Original_上班2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((Original_下班2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[41].Value = ((System.DateTime)(Original_下班2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((Original_打卡类别 == null)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(Original_打卡类别));
            }
            if ((Original_允许迟到.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[45].Value = ((int)(Original_允许迟到.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((Original_迟到限制.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[47].Value = ((int)(Original_迟到限制.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((Original_允许早退.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[49].Value = ((int)(Original_允许早退.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((Original_早退限制.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[51].Value = ((int)(Original_早退限制.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((Original_上班有效.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[53].Value = ((int)(Original_上班有效.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((Original_下班有效.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[55].Value = ((int)(Original_下班有效.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<global::System.Guid> 部门, 
                    global::System.Nullable<global::System.Guid> 班制, 
                    global::System.Nullable<global::System.DateTime> 启动日期, 
                    global::System.Nullable<int> 班次, 
                    global::System.Nullable<int> 周期序号, 
                    global::System.Nullable<global::System.DateTime> 日期, 
                    string 状态, 
                    global::System.Nullable<global::System.DateTime> 上班1, 
                    global::System.Nullable<global::System.DateTime> 下班1, 
                    global::System.Nullable<global::System.DateTime> 上班2, 
                    global::System.Nullable<global::System.DateTime> 下班2, 
                    string 打卡类别, 
                    global::System.Nullable<int> 允许迟到, 
                    global::System.Nullable<int> 迟到限制, 
                    global::System.Nullable<int> 允许早退, 
                    global::System.Nullable<int> 早退限制, 
                    global::System.Nullable<int> 上班有效, 
                    global::System.Nullable<int> 下班有效, 
                    System.Guid Original_ID, 
                    global::System.Nullable<global::System.Guid> Original_部门, 
                    global::System.Nullable<global::System.Guid> Original_班制, 
                    global::System.Nullable<global::System.DateTime> Original_启动日期, 
                    global::System.Nullable<int> Original_班次, 
                    global::System.Nullable<int> Original_周期序号, 
                    global::System.Nullable<global::System.DateTime> Original_日期, 
                    string Original_状态, 
                    global::System.Nullable<global::System.DateTime> Original_上班1, 
                    global::System.Nullable<global::System.DateTime> Original_下班1, 
                    global::System.Nullable<global::System.DateTime> Original_上班2, 
                    global::System.Nullable<global::System.DateTime> Original_下班2, 
                    string Original_打卡类别, 
                    global::System.Nullable<int> Original_允许迟到, 
                    global::System.Nullable<int> Original_迟到限制, 
                    global::System.Nullable<int> Original_允许早退, 
                    global::System.Nullable<int> Original_早退限制, 
                    global::System.Nullable<int> Original_上班有效, 
                    global::System.Nullable<int> Original_下班有效) {
            return this.Update(Original_ID, 部门, 班制, 启动日期, 班次, 周期序号, 日期, 状态, 上班1, 下班1, 上班2, 下班2, 打卡类别, 允许迟到, 迟到限制, 允许早退, 早退限制, 上班有效, 下班有效, Original_ID, Original_部门, Original_班制, Original_启动日期, Original_班次, Original_周期序号, Original_日期, Original_状态, Original_上班1, Original_下班1, Original_上班2, Original_下班2, Original_打卡类别, Original_允许迟到, Original_迟到限制, Original_允许早退, Original_早退限制, Original_上班有效, Original_下班有效);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class EMPLOYTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public EMPLOYTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "EMPLOY";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("EMPID", "EMPID");
            tableMapping.ColumnMappings.Add("EMPCODE", "EMPCODE");
            tableMapping.ColumnMappings.Add("NAME", "NAME");
            tableMapping.ColumnMappings.Add("EMPTYPEID", "EMPTYPEID");
            tableMapping.ColumnMappings.Add("company", "company");
            tableMapping.ColumnMappings.Add("DEPARTMENT", "DEPARTMENT");
            tableMapping.ColumnMappings.Add("DEPTCODE", "DEPTCODE");
            tableMapping.ColumnMappings.Add("DUTY", "DUTY");
            tableMapping.ColumnMappings.Add("POSTCODE", "POSTCODE");
            tableMapping.ColumnMappings.Add("FOREFATHER", "FOREFATHER");
            tableMapping.ColumnMappings.Add("POSTDATE", "POSTDATE");
            tableMapping.ColumnMappings.Add("SIGN", "SIGN");
            tableMapping.ColumnMappings.Add("PAY", "PAY");
            tableMapping.ColumnMappings.Add("COUNTMETH", "COUNTMETH");
            tableMapping.ColumnMappings.Add("MEMORY", "MEMORY");
            tableMapping.ColumnMappings.Add("ISOPERATE", "ISOPERATE");
            tableMapping.ColumnMappings.Add("SEX", "SEX");
            tableMapping.ColumnMappings.Add("BIRTHDAY", "BIRTHDAY");
            tableMapping.ColumnMappings.Add("IDCARD", "IDCARD");
            tableMapping.ColumnMappings.Add("ADDRESS", "ADDRESS");
            tableMapping.ColumnMappings.Add("EMAIL", "EMAIL");
            tableMapping.ColumnMappings.Add("CULTURE", "CULTURE");
            tableMapping.ColumnMappings.Add("BP", "BP");
            tableMapping.ColumnMappings.Add("TELEPHONE", "TELEPHONE");
            tableMapping.ColumnMappings.Add("HOMEPHONE", "HOMEPHONE");
            tableMapping.ColumnMappings.Add("UPFLAG", "UPFLAG");
            tableMapping.ColumnMappings.Add("pic", "pic");
            tableMapping.ColumnMappings.Add("核算方式", "核算方式");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[EMPLOY] ([ID], [EMPID], [EMPCODE], [NAME], [EMPTYPEID], [company], [DEPARTMENT], [DEPTCODE], [DUTY], [POSTCODE], [FOREFATHER], [POSTDATE], [SIGN], [PAY], [COUNTMETH], [MEMORY], [ISOPERATE], [SEX], [BIRTHDAY], [IDCARD], [ADDRESS], [EMAIL], [CULTURE], [BP], [TELEPHONE], [HOMEPHONE], [UPFLAG], [pic], [核算方式]) VALUES (@ID, @EMPID, @EMPCODE, @NAME, @EMPTYPEID, @company, @DEPARTMENT, @DEPTCODE, @DUTY, @POSTCODE, @FOREFATHER, @POSTDATE, @SIGN, @PAY, @COUNTMETH, @MEMORY, @ISOPERATE, @SEX, @BIRTHDAY, @IDCARD, @ADDRESS, @EMAIL, @CULTURE, @BP, @TELEPHONE, @HOMEPHONE, @UPFLAG, @pic, @核算方式)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMPID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMPID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMPCODE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMPCODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NAME", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMPTYPEID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMPTYPEID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@company", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEPARTMENT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEPARTMENT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEPTCODE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEPTCODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DUTY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DUTY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@POSTCODE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POSTCODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FOREFATHER", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FOREFATHER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@POSTDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POSTDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SIGN", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SIGN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PAY", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PAY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COUNTMETH", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COUNTMETH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MEMORY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEMORY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ISOPERATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ISOPERATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEX", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEX", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BIRTHDAY", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BIRTHDAY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IDCARD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IDCARD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADDRESS", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADDRESS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMAIL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMAIL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CULTURE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CULTURE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TELEPHONE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TELEPHONE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HOMEPHONE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HOMEPHONE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UPFLAG", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UPFLAG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pic", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pic", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@核算方式", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "核算方式", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Granity.granityMgr.Properties.Settings.Default.SmartCardConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT ID, EMPID, EMPCODE, NAME, EMPTYPEID, company, DEPARTMENT, DEPTCODE, DUTY, POSTCODE, FOREFATHER, POSTDATE, SIGN, PAY, COUNTMETH, MEMORY, ISOPERATE, SEX, BIRTHDAY, IDCARD, ADDRESS, EMAIL, CULTURE, BP, TELEPHONE, HOMEPHONE, UPFLAG, pic, 核算方式 FROM dbo.EMPLOY";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetCheckOnWorkList.EMPLOYDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetCheckOnWorkList.EMPLOYDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSetCheckOnWorkList.EMPLOYDataTable dataTable = new DataSetCheckOnWorkList.EMPLOYDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSetCheckOnWorkList.EMPLOYDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSetCheckOnWorkList dataSet) {
            return this.Adapter.Update(dataSet, "EMPLOY");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    System.Guid ID, 
                    global::System.Nullable<int> EMPID, 
                    string EMPCODE, 
                    string NAME, 
                    string EMPTYPEID, 
                    string company, 
                    string DEPARTMENT, 
                    string DEPTCODE, 
                    string DUTY, 
                    string POSTCODE, 
                    string FOREFATHER, 
                    global::System.Nullable<global::System.DateTime> POSTDATE, 
                    string SIGN, 
                    global::System.Nullable<double> PAY, 
                    string COUNTMETH, 
                    string MEMORY, 
                    global::System.Nullable<bool> ISOPERATE, 
                    string SEX, 
                    global::System.Nullable<global::System.DateTime> BIRTHDAY, 
                    string IDCARD, 
                    string ADDRESS, 
                    string EMAIL, 
                    string CULTURE, 
                    string BP, 
                    string TELEPHONE, 
                    string HOMEPHONE, 
                    global::System.Nullable<bool> UPFLAG, 
                    string pic, 
                    string 核算方式) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.Guid)(ID));
            if ((EMPID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(EMPID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((EMPCODE == null)) {
                throw new global::System.ArgumentNullException("EMPCODE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(EMPCODE));
            }
            if ((NAME == null)) {
                throw new global::System.ArgumentNullException("NAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(NAME));
            }
            if ((EMPTYPEID == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(EMPTYPEID));
            }
            if ((company == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(company));
            }
            if ((DEPARTMENT == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(DEPARTMENT));
            }
            if ((DEPTCODE == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(DEPTCODE));
            }
            if ((DUTY == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(DUTY));
            }
            if ((POSTCODE == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(POSTCODE));
            }
            if ((FOREFATHER == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(FOREFATHER));
            }
            if ((POSTDATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((System.DateTime)(POSTDATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((SIGN == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(SIGN));
            }
            if ((PAY.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((double)(PAY.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((COUNTMETH == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(COUNTMETH));
            }
            if ((MEMORY == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(MEMORY));
            }
            if ((ISOPERATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((bool)(ISOPERATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((SEX == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(SEX));
            }
            if ((BIRTHDAY.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((System.DateTime)(BIRTHDAY.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((IDCARD == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(IDCARD));
            }
            if ((ADDRESS == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(ADDRESS));
            }
            if ((EMAIL == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(EMAIL));
            }
            if ((CULTURE == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(CULTURE));
            }
            if ((BP == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(BP));
            }
            if ((TELEPHONE == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(TELEPHONE));
            }
            if ((HOMEPHONE == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(HOMEPHONE));
            }
            if ((UPFLAG.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((bool)(UPFLAG.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((pic == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(pic));
            }
            if ((核算方式 == null)) {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(核算方式));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
}

#pragma warning restore 1591